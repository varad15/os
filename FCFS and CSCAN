

#include <stdio.h>
#include <stdlib.h>

// Function to calculate total head movements using FCFS algorithm
int fcfs(int requests[], int size, int initialPosition) {
    int totalHeadMovements = abs(requests[0] - initialPosition);
    for (int i = 1; i < size; i++) {
        totalHeadMovements += abs(requests[i] - requests[i - 1]);
    }
    return totalHeadMovements;
}

// Function to calculate total head movements using C-SCAN algorithm
int cscan(int requests[], int size, int initialPosition, int upperBound) {
    int totalHeadMovements = 0;
    int currentPosition = initialPosition;

    // Sort the requests in ascending order
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (requests[j] > requests[j + 1]) {
                int temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }

    // Move towards higher cylinder numbers
    int i;
    for (i = 0; i < size; i++) {
        if (requests[i] >= currentPosition) {
            totalHeadMovements += abs(requests[i] - currentPosition);
            currentPosition = requests[i];
            break;
        }
    }
    if (currentPosition != upperBound) {
        totalHeadMovements += abs(upperBound - currentPosition);
        currentPosition = 0;
    }

    // Move back to the lower bound
    totalHeadMovements += upperBound;

    // Move towards higher cylinder numbers again
    for (i = 0; i < size; i++) {
        totalHeadMovements += abs(requests[i] - currentPosition);
        currentPosition = requests[i];
    }

    return totalHeadMovements;
}

int main() {
    int requests[] = {98, 183, 37, 122, 14, 124, 65, 67};
    int size = sizeof(requests) / sizeof(requests[0]);
    int initialPosition = 53;
    int upperBound = 199; // The upper bound of the cylinder

    printf("Total head movements using FCFS: %d\n", fcfs(requests, size, initialPosition));
    printf("Total head movements using C-SCAN: %d\n", cscan(requests, size, initialPosition, upperBound));

    return 0;
}
